{
  "HeaderInfo": {
    "AssemblyVersion": "1.3.44.0",
    "BaseSiteId": 10242324,
    "Server": "https://pleasanter.net/fs",
    "CreatorName": "浦田 哲平",
    "PackageTime": "2023-08-30T03:49:31.6342303+00:00",
    "Convertors": [
      {
        "SiteId": 10242324,
        "SiteTitle": "メモテーブルテンプレート",
        "ReferenceType": "Results",
        "IncludeData": false
      }
    ],
    "IncludeSitePermission": true,
    "IncludeRecordPermission": true,
    "IncludeColumnPermission": true,
    "IncludeNotifications": true,
    "IncludeReminders": true
  },
  "Sites": [
    {
      "TenantId": 1,
      "SiteId": 10242324,
      "Title": "メモテーブルテンプレート",
      "SiteName": "",
      "SiteGroupName": "",
      "Body": "",
      "GridGuide": "",
      "EditorGuide": "",
      "CalendarGuide": "",
      "CrosstabGuide": "",
      "GanttGuide": "",
      "BurnDownGuide": "",
      "TimeSeriesGuide": "",
      "KambanGuide": "",
      "ImageLibGuide": "",
      "ReferenceType": "Results",
      "ParentId": 9206016,
      "InheritPermission": 10242324,
      "SiteSettings": {
        "Version": 1.017,
        "ReferenceType": "Results",
        "GridColumns": [
          "ResultId",
          "TitleBody",
          "ClassA",
          "ClassB"
        ],
        "EditorColumnHash": {
          "General": [
            "ResultId",
            "Title",
            "Body",
            "AttachmentsA",
            "ClassA",
            "ClassB"
          ]
        },
        "Columns": [
          {
            "ColumnName": "Title",
            "ValidateRequired": false
          },
          {
            "ColumnName": "ClassA",
            "LabelText": "キーワード",
            "ExtendedHtmlAfterControl": "<button onclick=\"window.open(`https://www.google.com/search?q=${$p.getControl('ClassA').val()}`,'_blank');\"\nclass=\"button-icon\"\nstyle=\"position:absolute;left:343px;margin-top:2px;\"\ndata-icon=\"ul-icon-search\">\n    検索\n</button>"
          },
          {
            "ColumnName": "ClassB",
            "LabelText": "リンク"
          }
        ],
        "Processes": [
          {
            "Id": 1,
            "Name": "削除",
            "DisplayName": "削除",
            "CurrentStatus": -1,
            "ChangedStatus": -1,
            "OnClick": "$p.ex.execDeleteRecord();",
            "View": {
              "Id": 0,
              "ApiColumnKeyDisplayType": 0,
              "ApiColumnValueDisplayType": 0,
              "ApiDataType": 0
            }
          }
        ],
        "Notifications": [
          {
            "Type": 1,
            "Prefix": "トップ>デバッグ用>浦田作業用フォルダ>その他業務諸々>メモテーブルテンプレート）",
            "Subject": "[Owner]がレコードを[NotificationTrigger]しました。",
            "Address": "urata@implem.co.jp",
            "Encoding": "utf-8",
            "MediaType": "application/json",
            "MonitorChangesColumns": [
              "Title",
              "Body",
              "ClassA",
              "ClassB",
              "AttachmentsA",
              "Comments"
            ],
            "BeforeCondition": 0,
            "AfterCondition": 0,
            "Expression": 0,
            "Id": 1
          }
        ],
        "Styles": [
          {
            "Title": "背景色",
            "New": true,
            "Edit": true,
            "Index": true,
            "Body": "body {\n    background-color: #808080;\n}\n\n#FieldSetGeneral{\n    background-color: #C0C0C0;\n}\n\n.grid-row{\n    background-color: #C0C0C0;\n}",
            "Id": 1
          }
        ],
        "Scripts": [
          {
            "Title": "内容の差分内容の表示",
            "New": true,
            "Edit": true,
            "Body": "(function () {\n    // テーブルの種類を指定（期限付きテーブルの場合はIssues、記録テーブルの場合はResults）\n    var tableType = 'Results';\n    // 差分を確認したい項目IDと表示名を指定\n    var targetColumnId = 'Body';\n    var targetColumnName = '内容';\n    // 編集前と編集後の値を格納する変数\n    var value1 = '';\n    var value2 = '';\n    // 外部ライブラリの読み込み（jsdiff／diff2html）\n    var script1 = document.createElement('script');\n    var script2 = document.createElement('script');\n    var script3 = document.createElement('script');\n    var css1 = document.createElement('link');\n    script1.src = 'https://cdnjs.cloudflare.com/ajax/libs/jsdiff/3.4.0/diff.min.js';\n    script2.src = 'https://cdnjs.cloudflare.com/ajax/libs/diff2html/2.3.3/diff2html.min.js';\n    script3.src = 'https://cdnjs.cloudflare.com/ajax/libs/diff2html/2.3.3/diff2html-ui.min.js';\n    css1.setAttribute('rel', 'stylesheet');\n    css1.setAttribute('type', 'text/css');\n    css1.setAttribute('href', 'https://cdnjs.cloudflare.com/ajax/libs/diff2html/2.3.3/diff2html.min.css');\n    document.body.appendChild(script1);\n    document.body.appendChild(script2);\n    document.body.appendChild(script3);\n    document.body.appendChild(css1);\n    // 編集画面ロード時の値を取得する\n    $p.events.on_editor_load = function () {\n        value1 = $p.getControl(targetColumnId).val();\n    };\n    // 対象項目を変更したタイミングで値を取得して差分を表示する\n    $(document).on('change', '#' + tableType + '_' + targetColumnId, function () {\n        value2 = $p.getControl(targetColumnId).val();\n        diff2html();\n    });\n    // 編集画面の下部に対象項目の編集前後の差分を表示する関数\n    function diff2html() {\n        $('#diff2html').remove();\n        $(\"#Editor\").after('<div id=\"diff2html\" style=\"display:inline-block;\"></div>');\n        $('#diff2html').css(\"width\",\"calc(100% - 250px)\");\n        html = '<div id=\"app\">';\n        $('#diff2html').append(html);\n        unifiedDiff = JsDiff.createPatch(targetColumnName, value1, value2, 'before', 'after');\n        diff2htmlUi = new Diff2HtmlUI({diff: unifiedDiff});\n        diff2htmlUi.draw('#app', {inputFormat: 'json', outputFormat: 'side-by-side', matching: 'lines'});\n    };\n})();",
            "Id": 1
          },
          {
            "Title": "ボタンクリック時のレコード削除イベント",
            "Index": true,
            "Body": "// クライアントスクリプト\ntry {\n    // my-row-buttonがクリックされたときのイベント\n    $(document).on('click', '.my-row-button', function (event) {\n        // レコードのIDをコンソールに出力\n        $p.apiDelete({\n        id: $(this).data('id'),\n        done: function (data) {\n            location.reload();\n        }\n    });\n        // 編集画面が開かないようにイベントの伝搬を停止\n        event.stopImmediatePropagation();\n    });\n} catch (ex) {\n    console.log(ex.stack)\n}",
            "Id": 2
          },
          {
            "Title": "レコードを削除する",
            "Edit": true,
            "Body": "$p.ex.execDeleteRecord = function () {\n    const siteId = 0;\n    try {\n        // レコードのIDをコンソールに出力\n        $p.apiDelete({\n            id: $p.id(),\n            done: function (data) {\n                window.location.href = 'https://pleasanter.net/fs/items/' + siteId + '/index'\n            }\n        });\n    } catch (ex) {\n        console.log(ex.stack)\n    }\n}",
            "Id": 4
          },
          {
            "Title": "編集画面設定用($p.events.on_editor_load)",
            "Edit": true,
            "Body": "$p.events.on_editor_load = function () {\n    // 常に新バージョンとして保存をオン\n    let verup = $(\"#VerUp\");\n    verup.prop('checked', true);\n\n    // リンクボタンの表示\n    $('#Results_ClassBField').after('<button type=\"button\" style=\"display:block;float:left;height:30px;padding:7px 12px;border:solid 1px silver;background-color:white;\" onclick=\"Transition()\">リンク</button>');\n};\nfunction Transition() {\n    open($p.getControl('ClassB').val());\n}",
            "Id": 5
          },
          {
            "Title": "一覧画面($p.events.on_grid_load)",
            "Index": true,
            "Body": "$p.events.on_grid_load = function () {\n    // リンク列にリンクを設定\n    let table = document.getElementById('Grid');\n    let colNum = $p.getGridColumnIndex('ClassB');\n    for (let row of table.rows) {\n        console.log(row.className);\n        if (row.className === 'grid-row') {\n            let urlText = row.cells[colNum].textContent;\n            const a1 = document.createElement(\"a\");\n            a1.href = urlText;\n            a1.target = \"_blank\";\n            a1.innerText = urlText;\n            row.cells[colNum].textContent = \"\";\n            row.cells[colNum].appendChild(a1);\n        }\n    }\n}",
            "Id": 6
          }
        ],
        "ServerScripts": [
          {
            "Title": "一覧画面の行に削除ボタンを配置",
            "Name": "",
            "BeforeOpeningRow": true,
            "Body": "// サーバスクリプト\ntry {\n    // 「data-id=\"${model.ResultId}\"」でボタンを表示する行を指定\n    let html = `<button data-id=\"${model.ResultId}\"class=\"button-icon my-row-button\"data-icon=\"ui-icon-circle-triangle-e\">削除</button>`;\n    // 該当業のClassA列に「削除」ボタンを表示\n    columns.ClassA.RawText = html;\n} catch (ex) {\n    context.Log(ex.stack);\n}",
            "TimeOut": 0,
            "Id": 1
          },
          {
            "Title": "新規・編集画面にある標準の削除・コピー・メールボタンを非表示にする",
            "Name": "",
            "BeforeOpeningPage": true,
            "Body": "    elements.DisplayType('DeleteCommand', 3);  // 削除\n    elements.DisplayType('OpenCopyDialogCommand', 3);  // コピー\n    elements.DisplayType('EditOutgoingMail', 3);  // メール",
            "TimeOut": 0,
            "Id": 2
          },
          {
            "Title": "一覧画面の一括削除・インポート・エクスポートボタンを非表示にする",
            "Name": "",
            "BeforeOpeningPage": true,
            "Body": "// 一覧画面\nif (context.Action === 'index') {\n    elements.DisplayType('BulkDeleteCommand', 3);  // 一括削除\n    elements.DisplayType('EditImportSettings', 3);  // インポート\n    elements.DisplayType('OpenExportSelectorDialogCommand', 3);  // エクスポート\n}",
            "TimeOut": 0,
            "Id": 3
          }
        ],
        "NoDisplayIfReadOnly": false
      },
      "Publish": false,
      "DisableCrossSearch": false,
      "Comments": []
    }
  ],
  "Data": [],
  "Permissions": [
    {
      "SiteId": 10242324,
      "Permissions": [
        {
          "ReferenceId": 10242324,
          "DeptId": 0,
          "GroupId": 0,
          "UserId": 12454,
          "PermissionType": 511
        }
      ]
    }
  ],
  "PermissionIdList": {
    "DeptIdList": [],
    "GroupIdList": [],
    "UserIdList": [
      {
        "UserId": 12454,
        "LoginId": "5886e885-28a5-4db9-a67f-9f0756d42019"
      }
    ]
  }
}