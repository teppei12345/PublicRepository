services:
  pleasanter:
    build:
      context: .
      dockerfile: ./Pleasanter_1.4.6.0/Dockerfile
      args:
        - VERSION=${PLEASANTER_VER}
    container_name: pleasanter_${PLEASANTER_VER}
    environment:
      Implem.Pleasanter_Rds_SaConnectionString:     ${Implem_Pleasanter_Rds_PostgreSQL_SaConnectionString}
      Implem.Pleasanter_Rds_OwnerConnectionString:  ${Implem_Pleasanter_Rds_PostgreSQL_OwnerConnectionString}
      Implem.Pleasanter_Rds_UserConnectionString:   ${Implem_Pleasanter_Rds_PostgreSQL_UserConnectionString}
    depends_on:
      - db
    ports:
      - '50001:8080'
    networks:
      - default
  codedefiner:
    build:
      context: .
      dockerfile: ./CodeDefiner/Dockerfile
    container_name: codedefiner
    environment:
      Implem.Pleasanter_Rds_SaConnectionString:     ${Implem_Pleasanter_Rds_PostgreSQL_SaConnectionString}
      Implem.Pleasanter_Rds_OwnerConnectionString:  ${Implem_Pleasanter_Rds_PostgreSQL_OwnerConnectionString}
      Implem.Pleasanter_Rds_UserConnectionString:   ${Implem_Pleasanter_Rds_PostgreSQL_UserConnectionString}
    depends_on:
      - db
    networks:
      - default
    stdin_open: true
  db:
    build:
      context: .
      dockerfile: ./PostgreSQL15/Dockerfile
      args:
        - VERSION=${POSTGRES_VER}
    container_name: postgres_${PLEASANTER_VER}
    volumes:
      - type: volume
        source: pg_data
        target: /var/lib/postgresql/data
    networks:
      - default
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
      - POSTGRES_HOST_AUTH_METHOD
      - POSTGRES_INITDB_ARGS
      - PGDATA
    user: postgres
  pgadmin4:
    build:
      context: .
      dockerfile: ./pgadmin4_8.9/Dockerfile
      args:
        - VERSION=${PGADMIN4_VER}
    container_name: pgadmin4_${PLEASANTER_VER}
    depends_on:
      - db
    environment:
      - PGADMIN_DEFAULT_EMAIL
      - PGADMIN_DEFAULT_PASSWORD
    ports:
      - 12345:80
    volumes:
      - pgadmin4-data:/var/lib/pgadmin
    networks:
      - default
  dbbackup:
    image: ubuntu
    container_name: dbbackup
    networks:
      - default
    volumes:
      - type: volume
        source: pg_data
        target: /pg_data
      - type: bind
        source: .
        target: /backup
volumes:
  pg_data:
    name: ${COMPOSE_PROJECT_NAME:-  default}_pg_data_${PLEASANTER_VER}
  pgadmin4-data:
    name: ${COMPOSE_PROJECT_NAME:-  default}_pgadmin4-data_${PLEASANTER_VER}
networks:
  default:
    name: pleasanter_${PLEASANTER_VER}_network